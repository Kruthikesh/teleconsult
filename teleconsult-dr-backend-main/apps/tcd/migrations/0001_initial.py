# Generated by Django 4.1.7 on 2023-04-30 10:37

import apps.tcd.model_helpers
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patient', '0001_initial'),
        ('doctor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DoctorSuggestions',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ill_description', models.TextField(blank=True, max_length=10280, null=True)),
                ('fee', models.CharField(blank=True, max_length=512, null=True)),
                ('prescription_date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'da_doctors_suggestion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProblemReview',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('feedback_description', models.TextField(blank=True, max_length=10280, null=True)),
                ('feedback_rating', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'da_patients_problem_review',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProblems',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('problem_description', models.TextField(max_length=1024)),
                ('physical_examination_before_tcd', models.TextField(blank=True, max_length=1024, null=True)),
                ('medications_before_tcd', models.TextField(blank=True, max_length=1024, null=True)),
                ('surgeries_before_tcd', models.TextField(blank=True, max_length=1024, null=True)),
                ('treatment_response_before_tcd', models.TextField(blank=True, max_length=1024, null=True)),
                ('current_expectations', models.TextField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'da_patients_problem',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoSuggestions',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.FileField(upload_to=apps.tcd.model_helpers.get_file_path_for_dr_video_suggestion)),
                ('doctor_suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_suggestions_videos', to='tcd.doctorsuggestions')),
            ],
            options={
                'db_table': 'da_doctors_video_suggestion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoOfInteraction',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.FileField(upload_to=apps.tcd.model_helpers.get_file_path_for_dr_interaction_video)),
                ('doctor_suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_video_of_interaction', to='tcd.doctorsuggestions')),
            ],
            options={
                'db_table': 'da_video_of_interaction',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TCD',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tele_consultations', to='doctor.doctor')),
                ('patient', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tele_consultations', to='patient.patient')),
                ('specialisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tele_consultations', to='doctor.specialisation')),
            ],
            options={
                'db_table': 'da_tcd',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrescriptionImage',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.FileField(upload_to=apps.tcd.model_helpers.get_file_path_for_dr_prescription)),
                ('doctor_suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_prescription_images', to='tcd.doctorsuggestions')),
            ],
            options={
                'db_table': 'da_doctors_prescription_image',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientReviewVideos',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.FileField(upload_to=apps.tcd.model_helpers.get_file_path_for_review_videos)),
                ('patient_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_videos', to='tcd.patientproblemreview')),
            ],
            options={
                'db_table': 'da_patients_review_video',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientReviewImages',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to=apps.tcd.model_helpers.get_file_path_for_review_images)),
                ('patient_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_images', to='tcd.patientproblemreview')),
            ],
            options={
                'db_table': 'da_patients_review_images',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProblemsTCDVideos',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('video', models.FileField(blank=True, max_length=1023, null=True, upload_to=apps.tcd.model_helpers.get_file_path_for_patient_tcd_videos)),
                ('patient_problems', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_problem_tcd_videos', to='tcd.patientproblems')),
            ],
            options={
                'db_table': 'da_patients_problems_tcd_video',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatientProblemsTCDDocuments',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.FileField(blank=True, max_length=1023, null=True, upload_to=apps.tcd.model_helpers.get_file_path_for_patient_tcd_documents)),
                ('patient_problems', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_problem_tcd_documents', to='tcd.patientproblems')),
            ],
            options={
                'db_table': 'da_patients_problems_tcd_document',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='patientproblems',
            name='tcd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_problems', to='tcd.tcd'),
        ),
        migrations.AddField(
            model_name='patientproblemreview',
            name='tcd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_problem_reviews', to='tcd.tcd'),
        ),
        migrations.AddField(
            model_name='doctorsuggestions',
            name='patient_problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_suggestions', to='tcd.patientproblems'),
        ),
        migrations.CreateModel(
            name='DoctorExaminationImages',
            fields=[
                ('record_id', models.UUIDField(default=uuid.uuid4, help_text='common primary key for all the tables', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to=apps.tcd.model_helpers.get_file_path_for_dr_examination_images)),
                ('doctor_suggestion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_examination_images', to='tcd.doctorsuggestions')),
            ],
            options={
                'db_table': 'da_doctors_examination_image',
                'abstract': False,
            },
        ),
    ]
